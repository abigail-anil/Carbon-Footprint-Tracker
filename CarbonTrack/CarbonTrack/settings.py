"""
Django settings for CarbonTrack project.

Generated by 'django-admin startproject' using Django 2.1.15.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import boto3
from dotenv import load_dotenv

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'z0ggh1dm6n0qy*=qmg*u(j$%we2_8_@do(#sa!*2)h^d534*u2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
'127.0.0.1',
'localhost',
'879ac48e1c8f4ff3afc73a519682e53b.vfs.cloud9.us-east-1.amazonaws.com',
'carbontracker2b-env.eba-baxrbgbp.us-east-1.elasticbeanstalk.com']


# Application definition

INSTALLED_APPS = [
    'CarbonTracker.apps.CarbontrackerConfig',
    'users.apps.UsersConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CarbonTrack.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CarbonTrack.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}



# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


AWS_REGION = 'us-east-1'


SNS_TOPIC_ARN = "arn:aws:sns:us-east-1:754789402555:carbon_emissions_alerts"
S3_BUCKET_NAME = os.getenv('S3_BUCKET_NAME','carbon-tracker-reports')

LOGIN_REDIRECT_URL = '/'

LOGIN_URL = '/signin/'


STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # Collect static files to this directory

STATIC_URL = '/static/'

# Where to collect static files in production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Collect all static files here

# Additional locations for static files, if any
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # If you have a global static folder
]


load_dotenv()

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'INFO',  # Or 'DEBUG' 
        },
    },
}

AWS_REGION = os.getenv('AWS_REGION', 'us-east-1')  

# Set the region for boto3 to use (AWS SDK)
boto3.setup_default_session(region_name=AWS_REGION)